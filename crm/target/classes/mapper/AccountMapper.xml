<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kaisheng.project.mapper.AccountMapper">

    <select id="findByMobile" parameterType="string" resultType="Account">
        SELECT
            *
        FROM
            t_account
        WHERE
            mobile = #{_parameter}
    </select>

    <insert id="save" parameterType="Account">
        INSERT INTO t_account (
        username,
        PASSWORD,
        mobile,
        createtime,
        updatetime
        )
        VALUE
            (#{username},#{password},#{mobile},#{createTime},#{updateTime})
    </insert>

    <select id="findAllAccount" parameterType="int" resultType="Account">
        SELECT
            *
        FROM
            t_account
        WHERE
            t_account.id != #{accId}
    </select>

    <select id="findAllByDeptId" parameterType="map" resultType="Account">
        SELECT
            *
        FROM
            t_account a
        INNER JOIN t_account_dept ad ON a.id = ad.aid
        WHERE
            ad.pid = #{deptId}
        AND a.id != #{accId}
    </select>

    <select id="findEditAccById" parameterType="int" resultMap="findEditAccById">
        SELECT
            t_account.id,
            username,
            deptName,
            PASSWORD,
            createTime,
            updateTime,
            mobile
        FROM
            t_account
        INNER JOIN t_account_dept ON t_account.id = t_account_dept.aid
        INNER JOIN t_dept ON t_account_dept.pid = t_dept.id
        WHERE
            t_account.id = #{id}
    </select>

    <resultMap id="findEditAccById" type="Account">
        <id column="id" property="id"/>
        <result column="password" property="password"/>
        <result column="mobile" property="mobile"/>
        <result column="username" property="username"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <collection property="deptName" ofType="string">
            <result column="deptname" property="deptName"/>
        </collection>
    </resultMap>

    <select id="finByPage" parameterType="map" resultMap="accountPage">
        SELECT
        a.id,
        a.username,
        a.mobile,
        d.deptname
        FROM
        t_account a
        INNER JOIN t_account_dept ad ON a.id = ad.aid
        INNER JOIN t_dept d ON ad.pid = d.id
        <if test="deptId != null and deptId != '' and deptId != 0">
            INNER JOIN (
            SELECT
            id
            FROM
            t_account
            INNER JOIN t_account_dept ON t_account.id = t_account_dept.aid
            WHERE
            t_account_dept.pid = #{deptId}
            AND t_account.id != #{accId}
            LIMIT #{start},#{pageSize}
            ) AS temp ON a.id = temp.id
            ORDER BY
            a.id;
        </if>
        <if test="deptId == null or deptId == '' or deptId == 0">

            INNER JOIN (
            SELECT
            id
            FROM
            t_account
            WHERE
            t_account.id != #{accId}
            LIMIT #{start},#{pageSize}
            ) AS temp ON a.id = temp.id
            ORDER BY
            a.id
        </if>
    </select>

    <resultMap id="accountPage" type="Account">
        <id column="id" property="id"/>
        <result column="password" property="password"/>
        <result column="mobile" property="mobile"/>
        <result column="username" property="username"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <collection property="deptName" ofType="string">
            <result column="deptname" property="deptName"/>
        </collection>
    </resultMap>

    <select id="findAll" resultType="Account">
        select * from t_account
    </select>

    <select id="findById" resultMap="Account" parameterType="int">
        SELECT
            t_account.id,
            username,
            deptName,
            PASSWORD,
            createTime,
            updateTime,
            mobile
        FROM
            t_account
        INNER JOIN t_account_dept ON t_account.id = t_account_dept.aid
        INNER JOIN t_dept ON t_account_dept.pid = t_dept.id
        WHERE
            t_account.id = #{id}
    </select>

    <resultMap id="Account" type="Account">
        <id column="id" property="id"/>
        <result column="password" property="password"/>
        <result column="mobile" property="mobile"/>
        <result column="username" property="username"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <collection property="deptName" ofType="string">
            <result column="deptname" property="deptName"/>
        </collection>
    </resultMap>


    <select id="getAllNum" resultType="int" parameterType="int">
        SELECT
            COUNT(*)
        FROM
            t_account where id != #{id};
    </select>

    <update id="changeKey" parameterType="map">
        UPDATE t_account
        SET PASSWORD = #{password}
        WHERE
            id = #{id}
    </update>

    <update id="editAccount" parameterType="map">
        UPDATE t_account
        SET username = #{uaerName}, mobile = #{mobile}
        WHERE
            id = {id}
    </update>

    <delete id="delAccAnddeptByAccId" parameterType="int">
        DELETE
        FROM
            t_account_dept
        WHERE
            aid = #{id}
    </delete>

    <delete id="delById" parameterType="int">
        DELETE
        FROM
            t_account
        WHERE
            id = #{id}
    </delete>

    <select id="getCountByDeptId" parameterType="string" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
        <if test="deptId == null or deptId == 0">
            t_account
        </if>
        <if test="deptId != null and deptId != 0">
            t_account_dept where pid = #{deptId}
        </if>
    </select>

</mapper>